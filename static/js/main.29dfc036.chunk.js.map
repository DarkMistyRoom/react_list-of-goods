{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","minLength","start","setState","alphabet","ALPABET","length","LENGTH","revers","reset","value","this","visibleGoods","goods","filter","good","sort","g1","g2","localeCompare","reverse","getReorderedGoods","className","type","onClick","name","id","onChange","e","currentTarget","map","item","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kEAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA4CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,KACnBC,UAAW,GALf,EAQEC,MAAQ,WACN,EAAKC,SAAS,CAAEN,WAAW,KAT/B,EAYEO,SAAW,WACT,EAAKD,SAAS,CAAEJ,SAAUN,EAASY,WAbvC,EAgBEC,OAAS,WACP,EAAKH,SAAS,CAAEJ,SAAUN,EAASc,UAjBvC,EAoBEC,OAAS,WACP,EAAKL,UAAS,SAAAP,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAtBzB,EA0BEW,MAAQ,WACN,EAAKN,SAAS,CACZL,YAAY,EACZC,SAAUN,EAASO,KACnBC,UAAW,KA9BjB,EAkCEA,UAAY,SAACS,GACX,EAAKP,SAAS,CAAEF,UAAWS,KAnC/B,4CAsCE,WAAU,IAAD,OACP,EAKIC,KAAKf,MAJPC,EADF,EACEA,UACAE,EAFF,EAEEA,SACAD,EAHF,EAGEA,WACAG,EAJF,EAIEA,UAGIW,EAnFV,SACEC,EACAd,EACAD,EACAG,GAGA,IAAMW,EAAeC,EAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKT,QAAUL,KAmBzD,OAjBAW,EAAaI,MAAK,SAACC,EAAIC,GACrB,OAAQnB,GACN,KAAKN,EAASY,QACZ,OAAOY,EAAGE,cAAcD,GAE1B,KAAKzB,EAASc,OACZ,OAAOU,EAAGX,OAASY,EAAGZ,OAExB,QACE,OAAO,MAITR,GACFc,EAAaQ,UAGRR,EA0DDS,CAAkB3B,EAAiBK,EAAUD,EAAYG,GAE7D,OACE,qBAAKqB,UAAU,uBAAf,SACIzB,EAKA,qCACE,sBAAKyB,UAAU,gBAAf,UACE,wBACEA,UAAU,SACVC,KAAK,SACLC,QAASb,KAAKP,SAHhB,iCAQA,wBAAQkB,UAAU,SAASC,KAAK,SAASC,QAASb,KAAKL,OAAvD,4BAIA,wBAAQgB,UAAU,SAASC,KAAK,SAASC,QAASb,KAAKH,OAAvD,qBAIA,wBAAQc,UAAU,SAASC,KAAK,SAASC,QAASb,KAAKF,MAAvD,sBAKF,wBAAOa,UAAU,yBAAjB,wBAEE,wBACEA,UAAU,qBACVG,KAAK,YACLC,GAAG,YACHhB,MAAOT,EACP0B,SAAU,SAAAC,GAAC,OAAI,EAAK3B,WAAW2B,EAAEC,cAAcnB,QALjD,SAOG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIoB,KAAI,SAAAC,GAAI,OACvC,wBAAQrB,MAAOqB,EAAf,SAAsBA,YAK5B,oBAAIT,UAAU,QAAd,SACGV,EAAakB,KAAI,SAAAf,GAAI,OACpB,oBAAeO,UAAU,0BAAzB,SAAoDP,GAA3CA,WA5Cf,wBAAQO,UAAU,SAASC,KAAK,SAASC,QAASb,KAAKT,MAAvD,yBApDV,GAAyB8B,aC1DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.29dfc036.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Component } from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n  minLength: number,\n) {\n  // Not to mutate the original array\n  const visibleGoods = goods.filter(good => good.length >= minLength);\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n  minLength: number,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n    minLength: 1,\n  };\n\n  start = () => {\n    this.setState({ isStarted: true });\n  };\n\n  alphabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  length = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  revers = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n      minLength: 1,\n    });\n  };\n\n  minLength = (value: number) => {\n    this.setState({ minLength: value });\n  };\n\n  render() {\n    const {\n      isStarted,\n      sortType,\n      isReversed,\n      minLength,\n    } = this.state;\n\n    const visibleGoods\n      = getReorderedGoods(goodsFromServer, sortType, isReversed, minLength);\n\n    return (\n      <div className=\"App panel is-success\">\n        {!isStarted ? (\n          <button className=\"button\" type=\"button\" onClick={this.start}>\n            Start\n          </button>\n        ) : (\n          <>\n            <div className=\"panel-heading\">\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={this.alphabet}\n              >\n                Sort alphabetically\n              </button>\n\n              <button className=\"button\" type=\"button\" onClick={this.length}>\n                Sort by length\n              </button>\n\n              <button className=\"button\" type=\"button\" onClick={this.revers}>\n                Reverse\n              </button>\n\n              <button className=\"button\" type=\"button\" onClick={this.reset}>\n                Reset\n              </button>\n            </div>\n\n            <label className=\"App__label panel-block\">\n              Min-length:\n              <select\n                className=\"App__select select\"\n                name=\"minLength\"\n                id=\"minLength\"\n                value={minLength}\n                onChange={e => this.minLength(+e.currentTarget.value)}\n              >\n                {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(item => (\n                  <option value={item}>{item}</option>\n                ))}\n              </select>\n            </label>\n\n            <ul className=\"Goods\">\n              {visibleGoods.map(good => (\n                <li key={good} className=\"Goods__item panel-block\">{good}</li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}